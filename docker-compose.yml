services:
  django:
    build:
      context: ./django
    command: python manage.py runserver 0.0.0.0:8200
    volumes:
      - ./django:/code
    ports:
      - "8200:8200"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
    depends_on:
      - postgres
    networks:
      - devbox
  
  fastapi:
    build:
      context: ./fastapi
    command: uvicorn app.main:app --host 0.0.0.0 --port 9000 --reload --reload-dir ./app
    environment:
      PORT: 9000
    ports:
      - '9000:9000'
    volumes:
      - ./fastapi/app:/code/app
    networks:
      - devbox

  flask:
    build:
      context: ./flask
    restart: always
    volumes:
      - ./flask/app:/app
    ports:
      - "8500:8500"
    environment:
      NODE_ENV: development
    networks:
      - devbox

  nextjs:
    build:
      context: ./nextjs
    restart: always
    volumes:
      - ./nextjs/public:/app/public
      - ./nextjs/src:/app/src
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    networks:
      - devbox

  express:
    build:
      context: ./express
    restart: always
    volumes:
     - ./:/code
    ports:
      - "8080:8080"
      - "9229:9229"
    environment:
     - SERVER_PORT=8080
    # - DATABASE_CONNECTIONSTRING=mongodb://mongo:27017/notes
    networks:
      - devbox

  rabbitmq:
    image: bitnami/rabbitmq:latest
    ports:
        - 5672:5672
        - 15672:15672
    networks:
      - devbox

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./database/redis/d–∞ta:/root/redis
      - ./database/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    networks:
      - devbox

  postgres:
    image: postgres
    volumes:
      - ./database/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=shulcloud
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - devbox

  mongodb:
    image: mongo
    volumes:
      - ./database/mongo:/data/db
      - ./database/mongodb_config:/data/configdb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=app_user
      - MONGO_INITDB_ROOT_PASSWORD=app_password
      - MONGO_INITDB_DATABASE=admin
    networks:
      - devbox

  kong:
    image: kong:latest
    build:
      context: ./kong
    restart: always
    environment:
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yml"
    volumes:
      - ./kong/config:/opt/kong
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8001:8001"
      - "8000:8000"
    networks:
      - devbox

  konga:
    build:
      context: ./konga
    restart: always
    environment:
      TOKEN_SECRET: km1GUr4RkQcD7DewhJPNXrCuZwcKmqjb
      NODE_ENV: development
    ports:
      - "1337:1337"
    networks:
      - devbox

  nginx:
    build:
      context: ./nginx
    restart: always
    ports:
      - "8081:80"
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=80
    networks:
      - devbox

networks:
  devbox:
    driver: bridge